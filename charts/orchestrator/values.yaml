#################################################################################
# Copyright (c) 2022,2023 T-Systems International GmbH
# Copyright (c) 2022,2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

    # -- Number of Replicas for pods
replicaCount: 1

image:
    # -- Image to use for deploying an application
  repository: tractusx/managed-service-orchestrator
    # -- Set the Image Pull Policy
  pullPolicy: Always
    # -- Image tage is defined in chart appVersion
  tag: ""

imagePullSecrets: []

serviceAccount:
    # -- Specifies whether a service account should be created
  create: true
    # -- Annotations to add to the service account
  annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}

portContainer: 9999

podSecurityContext:
  fsGroup: 2000

securityContext:
    # -- Controls whether a process can gain more privilege
  allowPrivilegeEscalation: false
  runAsUser: 1000
  runAsNonRoot: true
probe:
  endpoint: "/api/healthz"

service:
    # -- Type of service
  type: ClusterIP
    # -- Port details for sevice
  port: 9999
  # -- Container Port details for sevice
  portContainer: 9999

ingress:
    # -- If you want to enable or disable the ingress
  enabled: false
    # -- a reference to an Ingress Class resource that contains additional configuration including the name of the controller that should implement the class
  className: nginx
    # -- Annotations to add to the ingress
  annotations: {}

    # -- Host of the application on which application runs
  host: ""

resources:
  limits:
    # -- set a maximum amount of allows CPU utilization by specifying a limit on the container.
    cpu: 900m
    # -- set a maximum amount of allows memory utilization by specifying a limit on the container.
    memory: 2Gi
  requests:
    # -- sets the minimum amount of CPU required for the container
    cpu: 400m
    # -- set a minimum amount of allows memory utilization by specifying a limit on the container.
    memory: 2Gi

autoscaling:
  enabled: false
nodeSelector: {}
tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

secretRef: "managed-service-orchestrator"

postgresql:
  enabled: true
  fullnameOverride: "postgresql"
  auth:
    username: "postgres"
    password: "default"
    postgresPassword: "default"
    database: "postgres"
    port: 5432
    existingSecret: ""

properties:
  connectorTestServiceUrl: default
  connectorregisterUrl: default
  connectorregisterkeycloakclientId: default
  connectorregisterkeycloakclientSecret: default
  connectorregisterkeycloaktokenURI: default
  dapsJksUrl: default
  dapsTokenUrl: default
  dapsUrl: default
  dnsname: default
  dnsnameProtocol: default
  edc_miwUrl: default
  edc_ssi_authorityId: default
  emailpassword: default
  emailuser: default
  keycloakAuthserverUrl: default
  keycloakClientid: default
  keycloakRealm: default
  keycloakResource: default
  kubeappsToken: default
  kubeappsUrl: default
  mail_from: default
  mail_to: default
  dbpassword: default
  portalclientid: default
  portalclientsecret: default
  portalemail: default
  portaltokenurl: default
  portalurl: default
  resourceServerIssuer:  default
  sde_bpndiscovery_hostname: default
  sde_connector_discovery_clientId: default
  sde_connector_discovery_clientSecret: default
  sde_connector_discovery_token_url: default
  sde_digital_twins_authentication_url: default
  sde_digital_twins_hostname: default
  sde_discovery_authentication_url: default
  sde_discovery_clientId: default
  sde_discovery_clientSecret: default
  sde_discovery_grantType: default
  sde_dtregistry_url_prefix: default
  sde_dtregistryidp_client_id: default
  sde_dtregistrytenant_id: default
  sde_keycloak_auth: default
  sde_keycloak_realm: default
  sde_keycloak_tokenUrl: default
  sde_partner_pool_clientId: default
  sde_partner_pool_clientSecret: default
  sde_partner_pool_hostname: default
  sde_portal_backend_authentication_url: default
  sde_portal_backend_clientId: default
  sde_portal_backend_clientSecret: default
  sde_portal_backend_hostname: default
  sde_resource_server_issuer: default
  smtp_host: default
  smtp_port: default
  targetCluster: default
  targetNamesapce: default
  vaultToken: default
  vaultUrl: default
  keycloakBearerOnly: "true"
  keycloakUseResourceRoleMappings: "true"
  keycloakSslRequired: external
  manual_connector_registration: "false"
  manualupdate: "true"
  smtp_auth: "true"
  smtp_tls_enable: "true"
